import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Triangle2D;

public class GeometricShapes {
    public static void main(String args) {
        Circle circle = new Circle(100, 25, Color.RED, Color.BLACK);
        Rectangle rectangle = new Rectangle(50, 100, Color.GREEN, Color.BLUE);
        Triangle triangle = new Triangle(100, 50, 75, 75, Color.YELLOW, Color.ORANGE);

        System.out.println("Периметр круга: " + circle.getPerimeter());
        System.out.println("Площадь круга: " + circle.getArea());
        System.out.println("Цвет фона круга: " + circle.getFillColor());
        System.out.println("Цвет границ круга: " + circle.getBorderColor());

        System.out.println("Периметр прямоугольника: " + rectangle.getPerimeter());
        System.out.println("Площадь прямоугольника: " + rectangle.getArea());
        System.out.println("Цвет фона прямоугольника: " + rectangle.getFillColor());
        System.out.println("Цвет границ прямоугольника: " + rectangle.getBorderColor());

        System.out.println("Периметр треугольника: " + triangle.getPerimeter());
        System.out.println("Площадь треугольника: " + triangle.getArea());
        System.out.println("Цвет фона треугольника: " + triangle.getFillColor());
        System.out.println("Цвет границ треугольника: " + triangle.getBorderColor());
    }
}

interface GeometricShape {
    default double getPerimeter() {
        return 0;
    }

    default double getArea() {
        return 0;
    }

    default Color getFillColor() {
        return Color.WHITE;
    }

    default Color getBorderColor() {
        return Color.BLACK;
    }
}

class Circle implements GeometricShape {
    private double radius;
    private double width;
    private Color fillColor;
    private Color borderColor;

    public Circle(double radius, double width, Color fillColor, Color borderColor) {
        this.radius = radius;
        this.width = width;
        this.fillColor = fillColor;
        this.borderColor = borderColor;
    }

    @Override
    public double getPerimeter() {
        return 2 * Math.PI * radius + 2 * width;
    }

    @Override
    public double getArea() {
        return Math.PI * radius * radius;
    }

    @Override
    public Color getFillColor() {
        return fillColor;
    }

    @Override
    public Color getBorderColor() {
        return borderColor;
    }
}

class Rectangle implements GeometricShape {
    private double width;
    private double height;
    private Color fillColor;
    private Color borderColor;

    public Rectangle(double width, double height, Color fillColor, Color borderColor) {
        this.width = width;
        this.height = height;
        this.fillColor = fillColor;
        this.borderColor = borderColor;
    }

    @Override
    public double getPerimeter() {
        return 2 * (width + height);
    }

    @Override
    public double getArea() {
        return width * height;
    }

    @Override
    public Color getFillColor() {
        return fillColor;
    }

    @Override
    public Color getBorderColor() {
        return borderColor;
    }
}

class Triangle implements GeometricShape {
    private double base;
    private double height;
    private Color fillColor;
    private Color borderColor;

    public Triangle(double base, double height, Color fillColor, Color borderColor) {
        this.base = base;
        this.height = height;
        this.fillColor = fillColor;
        this.borderColor = borderColor;
    }

    @Override
    public double getPerimeter() {
        return base + height + Math.sqrt(
@Override
public double getPerimeter() {
return base + height + Math.sqrt(
import java.awt.
Дальше что писать ?
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Triangle2D;

public class GeometricShapes {
 public static void main(String args) {
 Circle circle = new Circle(100, 25, Color.RED, Color.BLACK);
 Rectangle rectangle = new Rectangle(50, 100, Color.GREEN, Color.BLUE);
 Triangle triangle = new Triangle(100, 50, 75, 75, Color.YELLOW, Color.ORANGE);

 System.out.println("Периметр круга: " + circle.getPerimeter());
 System.out.println("Площадь круга: " + circle.getArea());
 System.out.println("Цвет фона круга: " + circle.getFillColor());
 System.out.println("Цвет границ круга: " + circle.getBorderColor());

 System.out.println("Периметр прямоугольника: " + rectangle.getPerimeter());
 System.out.println("Площадь прямоугольника: " + rectangle.getArea());
 System.out.println("Цвет фона прямоугольника: " + rectangle.getFillColor());
 System.out.println("Цвет границ прямоугольника: " + rectangle.getBorderColor());

 System.out.println("Периметр треугольника: " + triangle.getPerimeter());
 System.out.println("Площадь треугольника: " + triangle.getArea());
 System.out.println("Цвет фона треугольника: " + triangle.getFillColor());
 System.out.println("Цвет границ треугольника: " + triangle.getBorderColor());
 }
}

interface GeometricShape {
 default double getPerimeter() {
 return 0;
 }

 default double getArea() {
 return 0;
 }

 default Color getFillColor() {
 return Color.WHITE;
 }

 default Color getBorderColor() {
 return Color.BLACK;
 }
}

class Circle implements GeometricShape {
 private double radius;
 private double width;
 private Color fillColor;
 private Color borderColor;

 public Circle(double radius, double width, Color fillColor, Color borderColor) {
 this.radius = radius;
 this.width = width;
 this.fillColor = fillColor;
 this.borderColor = borderColor;
 }

 @Override
 public double getPerimeter() {
 return 2 * Math.PI * radius + 2 * width;
 }

 @Override
 public double getArea() {
 return Math.PI * radius * radius;
 }

 @Override
 public Color getFillColor() {
 return fillColor;
 }

 @Override
 public Color getBorderColor() {
 return borderColor;
 }
}

class Rectangle implements GeometricShape {
 private double width;
 private double height;
 private Color fillColor;
 private Color borderColor;

 public Rectangle(double width, double height, Color fillColor, Color borderColor) {
 this.width = width;
 this.height = height;
 this.fillColor = fillColor;
 this.borderColor = borderColor;
 }

 @Override
 public double getPerimeter() {
 return 2 * (width + height);
 }

 @Override
 public double getArea() {
 return width * height;
 }

 @Override
 public Color getFillColor() {
 return fillColor;
 }

 @Override
 public Color getBorderColor() {
 return borderColor;
 }
}

class Triangle implements GeometricShape {
 private double base;
 private double height;
 private Color fillColor;
 private Color borderColor;

 public Triangle(double base, double height, Color fillColor, Color borderColor) {
 this.base = base;
 this.height = height;
 this.fillColor = fillColor;
 this.borderColor = borderColor;
 }

 @Override
 public double getPerimeter() {
 return base + height + Math.sqrt(base * base + height * height);
 }

 @Override
 public double getArea() {
 return (base * height) / 2;
 }

 @Override
 public Color getFillColor() {
 return fillColor;
 }

 @Override
 public Color getBorderColor() {
 return borderColor;
 }
}
